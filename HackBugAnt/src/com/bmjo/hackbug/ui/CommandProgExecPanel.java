/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bmjo.hackbug.ui;

import com.bmjo.hackbug.core.CommandExecStatus;
import com.bmjo.hackbug.core.CommandInterpretor;

/**
 *
 * @author bmjo
 */
public class CommandProgExecPanel extends javax.swing.JPanel implements CommandExecStatus {

    CommandInterpretor interpretor;
    /**
     * Creates new form CommandProgExecPanel
     */
    public CommandProgExecPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textCommandProg = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        buttonLoadCommandFile = new javax.swing.JButton();
        buttonExecCommand = new javax.swing.JButton();
        buttonStopExec = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCommandExecStatus = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        textCommandProg.setColumns(20);
        textCommandProg.setRows(5);
        textCommandProg.setText("waitsec 1\n:label label1\nwaitmany \"bmjo\" \"iorbit\" \"test\"\ncase 0\nSend \"bmjo received\"\ngoto exitlab\ncase 1\nSend \"iOrbit received\"\ngoto exitlab\ncase 2\nSend \"test received\"\ngoto exitlab\ndefault\nSend \"wrong option received\"\n:label exitlab\ngoto label1\nEND\n\n\n");
        textCommandProg.setToolTipText("");
        jScrollPane1.setViewportView(textCommandProg);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        buttonLoadCommandFile.setText("Load");

        buttonExecCommand.setText("Exec");
        buttonExecCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExecCommandActionPerformed(evt);
            }
        });

        buttonStopExec.setText("Stop");
        buttonStopExec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStopExecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonLoadCommandFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonExecCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonStopExec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonLoadCommandFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExecCommand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonStopExec)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.LINE_END);

        txtCommandExecStatus.setColumns(20);
        txtCommandExecStatus.setRows(5);
        jScrollPane2.setViewportView(txtCommandExecStatus);

        add(jScrollPane2, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonExecCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExecCommandActionPerformed
        // TODO add your handling code here:
        interpretor = new CommandInterpretor();
        String script = textCommandProg.getText();
        interpretor.addStatusListner(this);
        interpretor.Execute(script);
        
    }//GEN-LAST:event_buttonExecCommandActionPerformed

    private void buttonStopExecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopExecActionPerformed
        // TODO add your handling code here:
        if(interpretor!=null) interpretor.Stop();
    }//GEN-LAST:event_buttonStopExecActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonExecCommand;
    private javax.swing.JButton buttonLoadCommandFile;
    private javax.swing.JButton buttonStopExec;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textCommandProg;
    private javax.swing.JTextArea txtCommandExecStatus;
    // End of variables declaration//GEN-END:variables

    @Override
    public void CommandExecStatus(String command, String status) {
       String statusStr = command+" : "+status+"\r\n";
      txtCommandExecStatus.append(statusStr);    
      
      txtCommandExecStatus.setCaretPosition(txtCommandExecStatus.getText().length());
    }

    @Override
    public void CommandParseStatus(String command, String status) {
      String statusStr = command+" : "+status+"\r\n";
      txtCommandExecStatus.append(statusStr);
       txtCommandExecStatus.setCaretPosition(txtCommandExecStatus.getText().length());
    }
}
